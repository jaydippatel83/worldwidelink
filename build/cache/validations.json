{
  "version": "3.4",
  "log": [
    {
      "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "076ab3eb7079e1fc8c047e309c420061d244bf180120f24df712190910274f12",
          "withoutMetadata": "a5ab3e054f7bf9051cc18658ac105cafc6683f2c71a97229602aecaebe2521f2",
          "linkedWithoutMetadata": "a5ab3e054f7bf9051cc18658ac105cafc6683f2c71a97229602aecaebe2521f2"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "3ff997b9e94f1857d3d98bf7b852b6e8e6cfdb647b4a429d68deddb34b1790e4",
          "withoutMetadata": "85b1c605db5bec90fc901c80c05ac614736b6fec2f6d0e4df2beb2febb02727e",
          "linkedWithoutMetadata": "85b1c605db5bec90fc901c80c05ac614736b6fec2f6d0e4df2beb2febb02727e"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:11",
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "getRouter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CCIPReceiver",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_router",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getSupportedTokens(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:5",
        "version": {
          "withMetadata": "c91f82035148db0a1fb23f7f72fb1d1af2a655b579cb197228f4401870539afb",
          "withoutMetadata": "1fa9256402a7772979f2a2ece35ae748169eccd54cc40eebbf7ecba0bac31273",
          "linkedWithoutMetadata": "1fa9256402a7772979f2a2ece35ae748169eccd54cc40eebbf7ecba0bac31273"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator": {
        "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:8",
        "version": {
          "withMetadata": "a1dc6712887238e507bc68ce3ea7234492f51c960eb0615a3a9f59ec895d946c",
          "withoutMetadata": "f6afb5ce304c7244fbd14304133fc8cd788b70ab5e3633fed26d0a65b575c4eb",
          "linkedWithoutMetadata": "f6afb5ce304c7244fbd14304133fc8cd788b70ab5e3633fed26d0a65b575c4eb"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerIsCreator",
            "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol:IERC20": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Sender.sol:Sender": {
        "src": "contracts/Sender.sol:18",
        "version": {
          "withMetadata": "5eaaf3e17cee7293056ce396bc0bfacddc94ee019071abf71a8772e398cc189a",
          "withoutMetadata": "9e601ca137f8c3860f3e98f373e16f8b0c83b9c2e114601fd7c4418293fae765",
          "linkedWithoutMetadata": "9e601ca137f8c3860f3e98f373e16f8b0c83b9c2e114601fd7c4418293fae765"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address)",
          "sendMessage(uint64,address,address,uint256)",
          "getNumberOfReceivedMessages()",
          "getLastReceivedMessageDetails()",
          "deposit()",
          "isChainSupported(uint64)",
          "getSendFees(uint64,address)",
          "()",
          "transferTokensToContract(address)",
          "withdraw()",
          "withdrawToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Sender",
            "src": "contracts/Sender.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "receivedMessages",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "Sender",
              "src": "contracts/Sender.sol:61"
            },
            {
              "label": "messageDetail",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_struct(MessageIn)702_storage)",
              "contract": "Sender",
              "src": "contracts/Sender.sol:62"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Deposit)707_storage)",
              "contract": "Sender",
              "src": "contracts/Sender.sol:63"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(LinkTokenInterface)640",
              "contract": "Sender",
              "src": "contracts/Sender.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)640": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Deposit)707_storage)": {
              "label": "mapping(address => struct Sender.Deposit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(MessageIn)702_storage)": {
              "label": "mapping(bytes32 => struct Sender.MessageIn)",
              "numberOfBytes": "32"
            },
            "t_struct(Deposit)707_storage": {
              "label": "struct Sender.Deposit",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "locked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MessageIn)702_storage": {
              "label": "struct Sender.MessageIn",
              "members": [
                {
                  "label": "sourceChainSelector",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "borrower",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    },
    {
      "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:10",
        "version": {
          "withMetadata": "076ab3eb7079e1fc8c047e309c420061d244bf180120f24df712190910274f12",
          "withoutMetadata": "a5ab3e054f7bf9051cc18658ac105cafc6683f2c71a97229602aecaebe2521f2",
          "linkedWithoutMetadata": "a5ab3e054f7bf9051cc18658ac105cafc6683f2c71a97229602aecaebe2521f2"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwner",
            "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:11"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:10",
        "version": {
          "withMetadata": "3ff997b9e94f1857d3d98bf7b852b6e8e6cfdb647b4a429d68deddb34b1790e4",
          "withoutMetadata": "85b1c605db5bec90fc901c80c05ac614736b6fec2f6d0e4df2beb2febb02727e",
          "linkedWithoutMetadata": "85b1c605db5bec90fc901c80c05ac614736b6fec2f6d0e4df2beb2febb02727e"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "(address,address)",
          "transferOwnership(address)",
          "acceptOwnership()",
          "owner()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ConfirmedOwnerWithProposal",
            "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:11",
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)",
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))",
          "getRouter()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CCIPReceiver",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:14"
          },
          {
            "kind": "state-variable-immutable",
            "name": "i_router",
            "src": "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:12"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "ccipReceive((bytes32,uint64,bytes,bytes,struct Client.EVMTokenAmount[]))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:IRouterClient": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IRouterClient.sol:6",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isChainSupported(uint64)",
          "getSupportedTokens(uint64)",
          "getFee(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))",
          "ccipSend(uint64,(bytes,bytes,struct Client.EVMTokenAmount[],address,bytes))"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client": {
        "src": "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:5",
        "version": {
          "withMetadata": "c91f82035148db0a1fb23f7f72fb1d1af2a655b579cb197228f4401870539afb",
          "withoutMetadata": "1fa9256402a7772979f2a2ece35ae748169eccd54cc40eebbf7ecba0bac31273",
          "linkedWithoutMetadata": "1fa9256402a7772979f2a2ece35ae748169eccd54cc40eebbf7ecba0bac31273"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface": {
        "src": "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator": {
        "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:8",
        "version": {
          "withMetadata": "a1dc6712887238e507bc68ce3ea7234492f51c960eb0615a3a9f59ec895d946c",
          "withoutMetadata": "f6afb5ce304c7244fbd14304133fc8cd788b70ab5e3633fed26d0a65b575c4eb",
          "linkedWithoutMetadata": "f6afb5ce304c7244fbd14304133fc8cd788b70ab5e3633fed26d0a65b575c4eb"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface"
        ],
        "libraries": [],
        "methods": [
          "()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "OwnerIsCreator",
            "src": "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol:IERC20": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165": {
        "src": "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:LinkTokenInterface": {
        "src": "@chainlink/contracts/src/v0.8/shared/interfaces/LinkTokenInterface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "allowance(address,address)",
          "approve(address,uint256)",
          "balanceOf(address)",
          "decimals()",
          "decreaseApproval(address,uint256)",
          "increaseApproval(address,uint256)",
          "name()",
          "symbol()",
          "totalSupply()",
          "transfer(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin/contracts/access/Ownable.sol:19",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin/contracts/access/Ownable.sol:27"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:34",
        "version": {
          "withMetadata": "88a3c888b5169522a1e8b40cf1313b9229953308e4132bef19807d8603b5e334",
          "withoutMetadata": "04b5deb386331ae4d1607c2f85e90763cac698a0865523e800fcf34fe45f7cfd",
          "linkedWithoutMetadata": "04b5deb386331ae4d1607c2f85e90763cac698a0865523e800fcf34fe45f7cfd"
        },
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:53"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:8",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:13",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:12",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/MockDAI.sol:MockDAI": {
        "src": "contracts/MockDAI.sol:8",
        "version": {
          "withMetadata": "c721a5e4a4e270e6ef59b91a2b99a29608908f73013e46cc14a8536d254a0621",
          "withoutMetadata": "edc50d8630e99700df9391753f539d1c1ac78ae9f2e8ff2cf3c949048ae01d7c",
          "linkedWithoutMetadata": "edc50d8630e99700df9391753f539d1c1ac78ae9f2e8ff2cf3c949048ae01d7c"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockDAI",
            "src": "contracts/MockDAI.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/MockUSDC.sol:MockUSDC": {
        "src": "contracts/MockUSDC.sol:8",
        "version": {
          "withMetadata": "d33ea06f70cb7681ca8b569f7bca08cb9e549e4ff60b1750883ce136e636c11d",
          "withoutMetadata": "a96f090108e1ad864cb5324145d788b9e34777c15e9e24c15076554da4c19580",
          "linkedWithoutMetadata": "a96f090108e1ad864cb5324145d788b9e34777c15e9e24c15076554da4c19580"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MockUSDC",
            "src": "contracts/MockUSDC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:37"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:39"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:41"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin/contracts/access/Ownable.sol:20"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/Sender.sol:Sender": {
        "src": "contracts/Sender.sol:18",
        "version": {
          "withMetadata": "9287c1744d38fc8578530868b6e022ae1fcfa7a1cd4ee6d46096d7909c4c1f35",
          "withoutMetadata": "03df00d2a5a65b986f4a9ceb6e21eb632c32f2ec066f707513189b3cde69ceaf",
          "linkedWithoutMetadata": "03df00d2a5a65b986f4a9ceb6e21eb632c32f2ec066f707513189b3cde69ceaf"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address)",
          "sendMessage(uint64,address,address,uint256)",
          "getNumberOfReceivedMessages()",
          "getLastReceivedMessageDetails()",
          "deposit()",
          "isChainSupported(uint64)",
          "getSendFees(uint64,address)",
          "()",
          "transferTokensToContract(address,uint256)",
          "withdraw()",
          "withdrawToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Sender",
            "src": "contracts/Sender.sol:67"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "receivedMessages",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "Sender",
              "src": "contracts/Sender.sol:61"
            },
            {
              "label": "messageDetail",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_struct(MessageIn)1655_storage)",
              "contract": "Sender",
              "src": "contracts/Sender.sol:62"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_struct(Deposit)1660_storage)",
              "contract": "Sender",
              "src": "contracts/Sender.sol:63"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(LinkTokenInterface)686",
              "contract": "Sender",
              "src": "contracts/Sender.sol:65"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)686": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Deposit)1660_storage)": {
              "label": "mapping(address => struct Sender.Deposit)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(MessageIn)1655_storage)": {
              "label": "mapping(bytes32 => struct Sender.MessageIn)",
              "numberOfBytes": "32"
            },
            "t_struct(Deposit)1660_storage": {
              "label": "struct Sender.Deposit",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "locked",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MessageIn)1655_storage": {
              "label": "struct Sender.MessageIn",
              "members": [
                {
                  "label": "sourceChainSelector",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "borrower",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      },
      "contracts/WorldWideLinkProtocol.sol:WorldWideLinkProtocol": {
        "src": "contracts/WorldWideLinkProtocol.sol:25",
        "version": {
          "withMetadata": "306a55608858bb15ab7c064934aec8c9a8071b2eedc8a95d145b3676a3825b6c",
          "withoutMetadata": "7bf35add2a0fa3b8c4b6b670279e0695f9648279319be5285fba597721d552d8",
          "linkedWithoutMetadata": "7bf35add2a0fa3b8c4b6b670279e0695f9648279319be5285fba597721d552d8"
        },
        "inherit": [
          "@chainlink/contracts-ccip/src/v0.8/shared/access/OwnerIsCreator.sol:OwnerIsCreator",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwner.sol:ConfirmedOwner",
          "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:ConfirmedOwnerWithProposal",
          "@chainlink/contracts-ccip/src/v0.8/interfaces/OwnableInterface.sol:OwnableInterface",
          "@chainlink/contracts-ccip/src/v0.8/ccip/applications/CCIPReceiver.sol:CCIPReceiver",
          "@chainlink/contracts-ccip/src/v0.8/vendor/openzeppelin-solidity/v4.8.0/utils/introspection/IERC165.sol:IERC165",
          "@chainlink/contracts-ccip/src/v0.8/ccip/interfaces/IAny2EVMMessageReceiver.sol:IAny2EVMMessageReceiver"
        ],
        "libraries": [
          "@chainlink/contracts-ccip/src/v0.8/ccip/libraries/Client.sol:Client"
        ],
        "methods": [
          "(address,address)",
          "borrowUSDC(bytes32)",
          "borrowDAI(bytes32)",
          "repayAndSendMessage(uint256,uint64,address,bytes32)",
          "repayDAIAndSendMessage(uint256,uint64,address,bytes32)",
          "getNumberOfReceivedMessages()",
          "getReceivedMessageDetails(bytes32)",
          "getLastReceivedMessageDetails()",
          "isChainSupported(uint64)",
          "()",
          "withdraw()",
          "withdrawToken(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WorldWideLinkProtocol",
            "src": "contracts/WorldWideLinkProtocol.sol:72"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "s_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:11"
            },
            {
              "label": "s_pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ConfirmedOwnerWithProposal",
              "src": "@chainlink/contracts-ccip/src/v0.8/ConfirmedOwnerWithProposal.sol:12"
            },
            {
              "label": "receivedMessages",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_bytes32)dyn_storage",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:63"
            },
            {
              "label": "messageDetail",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_bytes32,t_struct(MessageIn)2333_storage)",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:64"
            },
            {
              "label": "deposits",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:65"
            },
            {
              "label": "borrowings",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:66"
            },
            {
              "label": "usdcToken",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(MockUSDC)1593",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:68"
            },
            {
              "label": "daiToken",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(MockDAI)1558",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:69"
            },
            {
              "label": "linkToken",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(LinkTokenInterface)686",
              "contract": "WorldWideLinkProtocol",
              "src": "contracts/WorldWideLinkProtocol.sol:70"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(LinkTokenInterface)686": {
              "label": "contract LinkTokenInterface",
              "numberOfBytes": "20"
            },
            "t_contract(MockDAI)1558": {
              "label": "contract MockDAI",
              "numberOfBytes": "20"
            },
            "t_contract(MockUSDC)1593": {
              "label": "contract MockUSDC",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(MessageIn)2333_storage)": {
              "label": "mapping(bytes32 => struct WorldWideLinkProtocol.MessageIn)",
              "numberOfBytes": "32"
            },
            "t_struct(MessageIn)2333_storage": {
              "label": "struct WorldWideLinkProtocol.MessageIn",
              "members": [
                {
                  "label": "sourceChainSelector",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "sender",
                  "type": "t_address",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "depositor",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.19"
      }
    }
  ]
}